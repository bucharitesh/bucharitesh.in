/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from 'react';

export const Index: Record<string, any> = {
  index: {
    name: 'index',
    description: '',
    type: 'registry:style',
    registryDependencies: ['utils'],
    files: [],
    component: null,
    meta: undefined,
  },
  book: {
    name: 'book',
    description:
      'A book component for Next.js apps with next-themes and Tailwind CSS, supporting system, light, and dark modes.',
    type: 'registry:ui',
    registryDependencies: ['@bucharitesh/utils'],
    files: [
      {
        path: 'registry/bucharitesh/book.tsx',
        type: 'registry:ui',
        target: '',
      },
      {
        path: 'registry/styles/book.css',
        type: 'registry:style',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/bucharitesh/book.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'modern-progress': {
    name: 'modern-progress',
    description:
      'A modern progress component for Next.js apps with next-themes and Tailwind CSS, supporting system, light, and dark modes.',
    type: 'registry:ui',
    registryDependencies: ['@bucharitesh/utils'],
    files: [
      {
        path: 'registry/bucharitesh/modern-progress.tsx',
        type: 'registry:ui',
        target: '',
      },
      {
        path: 'registry/styles/modern-progress.css',
        type: 'registry:style',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/bucharitesh/modern-progress.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'pixel-icon': {
    name: 'pixel-icon',
    description:
      'A pixel icon component for Next.js apps with next-themes and Tailwind CSS, supporting system, light, and dark modes.',
    type: 'registry:ui',
    registryDependencies: ['@bucharitesh/utils'],
    files: [
      {
        path: 'registry/bucharitesh/pixel-icon.tsx',
        type: 'registry:ui',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/bucharitesh/pixel-icon.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'split-text-effect': {
    name: 'split-text-effect',
    description:
      'A split text effect component for Next.js apps with next-themes and Tailwind CSS, supporting system, light, and dark modes.',
    type: 'registry:ui',
    registryDependencies: ['@bucharitesh/utils'],
    files: [
      {
        path: 'registry/bucharitesh/split-text-effect.tsx',
        type: 'registry:ui',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/bucharitesh/split-text-effect.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'view-magnifier': {
    name: 'view-magnifier',
    description:
      'A view magnifier component for Next.js apps with next-themes and Tailwind CSS, supporting system, light, and dark modes.',
    type: 'registry:ui',
    registryDependencies: ['@bucharitesh/utils'],
    files: [
      {
        path: 'registry/bucharitesh/view-magnifier.tsx',
        type: 'registry:ui',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/bucharitesh/view-magnifier.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'game-of-life': {
    name: 'game-of-life',
    description:
      'A game of life component for Next.js apps with next-themes and Tailwind CSS, supporting system, light, and dark modes.',
    type: 'registry:ui',
    registryDependencies: ['@bucharitesh/utils'],
    files: [
      {
        path: 'registry/bucharitesh/game-of-life.tsx',
        type: 'registry:ui',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/bucharitesh/game-of-life.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'magical-mouse': {
    name: 'magical-mouse',
    description:
      'A magical mouse component for Next.js apps with next-themes and Tailwind CSS, supporting system, light, and dark modes.',
    type: 'registry:ui',
    registryDependencies: ['@bucharitesh/utils'],
    files: [
      {
        path: 'registry/bucharitesh/magical-mouse.tsx',
        type: 'registry:ui',
        target: '',
      },
      {
        path: 'registry/styles/magical-mouse.css',
        type: 'registry:style',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/bucharitesh/magical-mouse.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'book-demo': {
    name: 'book-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/book'],
    files: [
      {
        path: 'registry/example/book-demo.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/book-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'book-variant-demo': {
    name: 'book-variant-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/book'],
    files: [
      {
        path: 'registry/example/book-variant-demo.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/book-variant-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'game-of-life-demo': {
    name: 'game-of-life-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/game-of-life'],
    files: [
      {
        path: 'registry/example/game-of-life-demo.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/game-of-life-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'game-of-life-demo-2': {
    name: 'game-of-life-demo-2',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/game-of-life'],
    files: [
      {
        path: 'registry/example/game-of-life-demo-2.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/game-of-life-demo-2.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'magical-mouse-demo': {
    name: 'magical-mouse-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/magical-mouse'],
    files: [
      {
        path: 'registry/example/magical-mouse-demo.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/magical-mouse-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'modern-progress-demo': {
    name: 'modern-progress-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/modern-progress'],
    files: [
      {
        path: 'registry/example/modern-progress-demo.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/modern-progress-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'pixel-icon-demo': {
    name: 'pixel-icon-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/pixel-icon'],
    files: [
      {
        path: 'registry/example/pixel-icon-demo.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/pixel-icon-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'split-text-effect-demo': {
    name: 'split-text-effect-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/split-text-effect'],
    files: [
      {
        path: 'registry/example/split-text-effect-demo.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/split-text-effect-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'split-text-effect-demo-2': {
    name: 'split-text-effect-demo-2',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/split-text-effect'],
    files: [
      {
        path: 'registry/example/split-text-effect-demo-2.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        '@/registry/example/split-text-effect-demo-2.tsx'
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'split-text-effect-demo-3': {
    name: 'split-text-effect-demo-3',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/split-text-effect'],
    files: [
      {
        path: 'registry/example/split-text-effect-demo-3.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        '@/registry/example/split-text-effect-demo-3.tsx'
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'view-magnifier-demo': {
    name: 'view-magnifier-demo',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/view-magnifier'],
    files: [
      {
        path: 'registry/example/view-magnifier-demo.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/view-magnifier-demo.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'view-magnifier-demo-2': {
    name: 'view-magnifier-demo-2',
    description: '',
    type: 'registry:example',
    registryDependencies: ['@bucharitesh/view-magnifier'],
    files: [
      {
        path: 'registry/example/view-magnifier-demo-2.tsx',
        type: 'registry:component',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/example/view-magnifier-demo-2.tsx');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  utils: {
    name: 'utils',
    description: '',
    type: 'registry:lib',
    registryDependencies: undefined,
    files: [
      {
        path: 'registry/lib/utils.ts',
        type: 'registry:lib',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/lib/utils.ts');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'book-styles': {
    name: 'book-styles',
    description: '',
    type: 'registry:style',
    registryDependencies: undefined,
    files: [
      {
        path: 'registry/styles/book.css',
        type: 'registry:style',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/styles/book.css');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'modern-progress-styles': {
    name: 'modern-progress-styles',
    description: '',
    type: 'registry:style',
    registryDependencies: undefined,
    files: [
      {
        path: 'registry/styles/modern-progress.css',
        type: 'registry:style',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/styles/modern-progress.css');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  'magical-mouse-styles': {
    name: 'magical-mouse-styles',
    description: '',
    type: 'registry:style',
    registryDependencies: undefined,
    files: [
      {
        path: 'registry/styles/magical-mouse.css',
        type: 'registry:style',
        target: '',
      },
    ],
    component: React.lazy(async () => {
      const mod = await import('@/registry/styles/magical-mouse.css');
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === 'function' || typeof mod[key] === 'object'
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
};
